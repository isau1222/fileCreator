<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <% if (context.helmet) { %>

      <% if (context.helmet.title != null) { %>
        <title><%= context.helmet.title %></title>
      <% } %>

      <% if (context.helmet.canonical != null) { %>
        <link rel="canonical" href="<%= context.helmet.canonical %>">
      <% } %>

      <% if (context.helmet.meta != null) { %>
        <% context.helmet.meta.forEach(function(item) { %>
          <meta name="<%= item.name %>" content="<%= item.content %>">
        <% }); %>
      <% } %>

    <% } %>

    <!-- @TODO: proper escaping, e.g. https://www.npmjs.com/package/serialize-javascript -->
    <script>window.__INITIAL_STATE__ = <%- JSON.stringify(context.initialState) %>;</script>

    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <!--STYLES END-->
  </head>
  <body>
    <%- context.body %>

    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <!--SCRIPTS END-->

    <% if (context.scripts != null) { %>
      <% context.scripts.forEach(function(item) { %>
        <script src="<%= item %>"></script>
      <% }); %>
    <% } %>
  </body>
</html>
